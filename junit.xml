<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="235" failures="0" time="53.129">
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:16:44" time="17.082" tests="5">
    <testcase classname="Component Tests LoginComponent should authenticate the user upon login when previous state was set" name="Component Tests LoginComponent should authenticate the user upon login when previous state was set" time="0.069">
    </testcase>
    <testcase classname="Component Tests LoginComponent should authenticate the user upon login when previous state was not set" name="Component Tests LoginComponent should authenticate the user upon login when previous state was not set" time="0.031">
    </testcase>
    <testcase classname="Component Tests LoginComponent should empty the credentials upon cancel" name="Component Tests LoginComponent should empty the credentials upon cancel" time="0.011">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when register" name="Component Tests LoginComponent should redirect user when register" time="0.016">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when request password" name="Component Tests LoginComponent should redirect user when request password" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:16:44" time="17.378" tests="12">
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has no sub system" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has no sub system" time="0.064">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has sub systems" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the basename when it has sub systems" time="0.017">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the sub system name" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the sub system name" time="0.014">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the subsystem when it has multiple keys" name="Component Tests JhiHealthCheckComponent baseName and subSystemName should return the subsystem when it has multiple keys" time="0.014">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten empty health data" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten empty health data" time="0.032">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with no subsystems" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with no subsystems" time="0.012">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has no additional information" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has no additional information" time="0.018">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional information" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional information" time="0.019">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional error" name="Component Tests JhiHealthCheckComponent transformHealthData should flatten health data with subsystems at level 1, main system has additional error" time="0.028">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent getBadgeClass should get badge class" name="Component Tests JhiHealthCheckComponent getBadgeClass should get badge class" time="0.016">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent refresh should call refresh on init" name="Component Tests JhiHealthCheckComponent refresh should call refresh on init" time="0.034">
    </testcase>
    <testcase classname="Component Tests JhiHealthCheckComponent refresh should handle a 503 on refreshing health data" name="Component Tests JhiHealthCheckComponent refresh should handle a 503 on refreshing health data" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:01" time="1.492" tests="5">
    <testcase classname="Service Tests UploadFile Service Service methods should find an element" name="Service Tests UploadFile Service Service methods should find an element" time="0.023">
    </testcase>
    <testcase classname="Service Tests UploadFile Service Service methods should create a UploadFile" name="Service Tests UploadFile Service Service methods should create a UploadFile" time="0.039">
    </testcase>
    <testcase classname="Service Tests UploadFile Service Service methods should update a UploadFile" name="Service Tests UploadFile Service Service methods should update a UploadFile" time="0.012">
    </testcase>
    <testcase classname="Service Tests UploadFile Service Service methods should return a list of UploadFile" name="Service Tests UploadFile Service Service methods should return a list of UploadFile" time="0.011">
    </testcase>
    <testcase classname="Service Tests UploadFile Service Service methods should delete a UploadFile" name="Service Tests UploadFile Service Service methods should delete a UploadFile" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:01" time="1.185" tests="7">
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 0" name="Component Tests Alert Error Component Error Handling Should display an alert on status 0" time="0.026">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 404" name="Component Tests Alert Error Component Error Handling Should display an alert on status 404" time="0.016">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on generic error" time="0.012">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" time="0.014">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" time="0.016">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" time="0.014">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:03" time="0.789" tests="5">
    <testcase classname="Service Tests ScenarioFile Service Service methods should find an element" name="Service Tests ScenarioFile Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests ScenarioFile Service Service methods should create a ScenarioFile" name="Service Tests ScenarioFile Service Service methods should create a ScenarioFile" time="0.01">
    </testcase>
    <testcase classname="Service Tests ScenarioFile Service Service methods should update a ScenarioFile" name="Service Tests ScenarioFile Service Service methods should update a ScenarioFile" time="0.009">
    </testcase>
    <testcase classname="Service Tests ScenarioFile Service Service methods should return a list of ScenarioFile" name="Service Tests ScenarioFile Service Service methods should return a list of ScenarioFile" time="0.012">
    </testcase>
    <testcase classname="Service Tests ScenarioFile Service Service methods should delete a ScenarioFile" name="Service Tests ScenarioFile Service Service methods should delete a ScenarioFile" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:03" time="0.887" tests="5">
    <testcase classname="Service Tests OutputFile Service Service methods should find an element" name="Service Tests OutputFile Service Service methods should find an element" time="0.018">
    </testcase>
    <testcase classname="Service Tests OutputFile Service Service methods should create a OutputFile" name="Service Tests OutputFile Service Service methods should create a OutputFile" time="0.038">
    </testcase>
    <testcase classname="Service Tests OutputFile Service Service methods should update a OutputFile" name="Service Tests OutputFile Service Service methods should update a OutputFile" time="0.02">
    </testcase>
    <testcase classname="Service Tests OutputFile Service Service methods should return a list of OutputFile" name="Service Tests OutputFile Service Service methods should return a list of OutputFile" time="0.02">
    </testcase>
    <testcase classname="Service Tests OutputFile Service Service methods should delete a OutputFile" name="Service Tests OutputFile Service Service methods should delete a OutputFile" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:04" time="0.77" tests="5">
    <testcase classname="Service Tests Scenario Service Service methods should find an element" name="Service Tests Scenario Service Service methods should find an element" time="0.018">
    </testcase>
    <testcase classname="Service Tests Scenario Service Service methods should create a Scenario" name="Service Tests Scenario Service Service methods should create a Scenario" time="0.011">
    </testcase>
    <testcase classname="Service Tests Scenario Service Service methods should update a Scenario" name="Service Tests Scenario Service Service methods should update a Scenario" time="0.013">
    </testcase>
    <testcase classname="Service Tests Scenario Service Service methods should return a list of Scenario" name="Service Tests Scenario Service Service methods should return a list of Scenario" time="0.009">
    </testcase>
    <testcase classname="Service Tests Scenario Service Service methods should delete a Scenario" name="Service Tests Scenario Service Service methods should delete a Scenario" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:04" time="0.762" tests="5">
    <testcase classname="Service Tests Run Service Service methods should find an element" name="Service Tests Run Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests Run Service Service methods should create a Run" name="Service Tests Run Service Service methods should create a Run" time="0.011">
    </testcase>
    <testcase classname="Service Tests Run Service Service methods should update a Run" name="Service Tests Run Service Service methods should update a Run" time="0.023">
    </testcase>
    <testcase classname="Service Tests Run Service Service methods should return a list of Run" name="Service Tests Run Service Service methods should return a list of Run" time="0.015">
    </testcase>
    <testcase classname="Service Tests Run Service Service methods should delete a Run" name="Service Tests Run Service Service methods should delete a Run" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:04" time="0.849" tests="5">
    <testcase classname="Component Tests RegisterComponent should ensure the two passwords entered match" name="Component Tests RegisterComponent should ensure the two passwords entered match" time="0.023">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should update success to OK after creating an account" name="Component Tests RegisterComponent should update success to OK after creating an account" time="0.019">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" name="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" time="0.012">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" name="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" time="0.012">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of generic error" name="Component Tests RegisterComponent should notify of generic error" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:04" time="0.944" tests="6">
    <testcase classname="Component Tests AuditsComponent today function  should set toDate to current date" name="Component Tests AuditsComponent today function  should set toDate to current date" time="0.025">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function  should set fromDate to current date" name="Component Tests AuditsComponent previousMonth function  should set fromDate to current date" time="0.022">
    </testcase>
    <testcase classname="Component Tests AuditsComponent By default, on init should set all default values correctly" name="Component Tests AuditsComponent By default, on init should set all default values correctly" time="0.015">
    </testcase>
    <testcase classname="Component Tests AuditsComponent OnInit Should call load all on init" name="Component Tests AuditsComponent OnInit Should call load all on init" time="0.017">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort only by id asc" name="Component Tests AuditsComponent Create sort object Should sort only by id asc" time="0.014">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" name="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:05" time="0.828" tests="5">
    <testcase classname="Component Tests PasswordResetInitComponent should define its initial state" name="Component Tests PasswordResetInitComponent should define its initial state" time="0.019">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" name="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" time="0.014">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" name="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" time="0.017">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of unknown email upon email address not registered/400" name="Component Tests PasswordResetInitComponent notifies of unknown email upon email address not registered/400" time="0.013">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of error upon error response" name="Component Tests PasswordResetInitComponent notifies of error upon error response" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:05" time="0.834" tests="5">
    <testcase classname="Component Tests PasswordResetFinishComponent should define its initial state" name="Component Tests PasswordResetFinishComponent should define its initial state" time="0.021">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" name="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" time="0.016">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" name="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" time="0.014">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should update success to OK after resetting password" name="Component Tests PasswordResetFinishComponent should update success to OK after resetting password" time="0.014">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should notify of generic error" name="Component Tests PasswordResetFinishComponent should notify of generic error" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:06" time="0.889" tests="6">
    <testcase classname="Component Tests ScenarioFile Management Component Should call load all on init" name="Component Tests ScenarioFile Management Component Should call load all on init" time="0.037">
    </testcase>
    <testcase classname="Component Tests ScenarioFile Management Component should load a page" name="Component Tests ScenarioFile Management Component should load a page" time="0.023">
    </testcase>
    <testcase classname="Component Tests ScenarioFile Management Component should not load a page is the page is the same as the previous page" name="Component Tests ScenarioFile Management Component should not load a page is the page is the same as the previous page" time="0.021">
    </testcase>
    <testcase classname="Component Tests ScenarioFile Management Component should re-initialize the page" name="Component Tests ScenarioFile Management Component should re-initialize the page" time="0.034">
    </testcase>
    <testcase classname="Component Tests ScenarioFile Management Component should calculate the sort attribute for an id" name="Component Tests ScenarioFile Management Component should calculate the sort attribute for an id" time="0.016">
    </testcase>
    <testcase classname="Component Tests ScenarioFile Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests ScenarioFile Management Component should calculate the sort attribute for a non-id attribute" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:06" time="0.923" tests="6">
    <testcase classname="Component Tests ToolVersion Management Component Should call load all on init" name="Component Tests ToolVersion Management Component Should call load all on init" time="0.036">
    </testcase>
    <testcase classname="Component Tests ToolVersion Management Component should load a page" name="Component Tests ToolVersion Management Component should load a page" time="0.03">
    </testcase>
    <testcase classname="Component Tests ToolVersion Management Component should not load a page is the page is the same as the previous page" name="Component Tests ToolVersion Management Component should not load a page is the page is the same as the previous page" time="0.024">
    </testcase>
    <testcase classname="Component Tests ToolVersion Management Component should re-initialize the page" name="Component Tests ToolVersion Management Component should re-initialize the page" time="0.027">
    </testcase>
    <testcase classname="Component Tests ToolVersion Management Component should calculate the sort attribute for an id" name="Component Tests ToolVersion Management Component should calculate the sort attribute for an id" time="0.022">
    </testcase>
    <testcase classname="Component Tests ToolVersion Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests ToolVersion Management Component should calculate the sort attribute for a non-id attribute" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:07" time="1.121" tests="6">
    <testcase classname="Component Tests OutputFile Management Component Should call load all on init" name="Component Tests OutputFile Management Component Should call load all on init" time="0.039">
    </testcase>
    <testcase classname="Component Tests OutputFile Management Component should load a page" name="Component Tests OutputFile Management Component should load a page" time="0.031">
    </testcase>
    <testcase classname="Component Tests OutputFile Management Component should not load a page is the page is the same as the previous page" name="Component Tests OutputFile Management Component should not load a page is the page is the same as the previous page" time="0.022">
    </testcase>
    <testcase classname="Component Tests OutputFile Management Component should re-initialize the page" name="Component Tests OutputFile Management Component should re-initialize the page" time="0.028">
    </testcase>
    <testcase classname="Component Tests OutputFile Management Component should calculate the sort attribute for an id" name="Component Tests OutputFile Management Component should calculate the sort attribute for an id" time="0.021">
    </testcase>
    <testcase classname="Component Tests OutputFile Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests OutputFile Management Component should calculate the sort attribute for a non-id attribute" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:07" time="1.06" tests="6">
    <testcase classname="Component Tests Scenario Management Component Should call load all on init" name="Component Tests Scenario Management Component Should call load all on init" time="0.038">
    </testcase>
    <testcase classname="Component Tests Scenario Management Component should load a page" name="Component Tests Scenario Management Component should load a page" time="0.025">
    </testcase>
    <testcase classname="Component Tests Scenario Management Component should not load a page is the page is the same as the previous page" name="Component Tests Scenario Management Component should not load a page is the page is the same as the previous page" time="0.023">
    </testcase>
    <testcase classname="Component Tests Scenario Management Component should re-initialize the page" name="Component Tests Scenario Management Component should re-initialize the page" time="0.027">
    </testcase>
    <testcase classname="Component Tests Scenario Management Component should calculate the sort attribute for an id" name="Component Tests Scenario Management Component should calculate the sort attribute for an id" time="0.022">
    </testcase>
    <testcase classname="Component Tests Scenario Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Scenario Management Component should calculate the sort attribute for a non-id attribute" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:08" time="0.732" tests="5">
    <testcase classname="Service Tests Transfer Service Service methods should find an element" name="Service Tests Transfer Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests Transfer Service Service methods should create a Transfer" name="Service Tests Transfer Service Service methods should create a Transfer" time="0.011">
    </testcase>
    <testcase classname="Service Tests Transfer Service Service methods should update a Transfer" name="Service Tests Transfer Service Service methods should update a Transfer" time="0.012">
    </testcase>
    <testcase classname="Service Tests Transfer Service Service methods should return a list of Transfer" name="Service Tests Transfer Service Service methods should return a list of Transfer" time="0.011">
    </testcase>
    <testcase classname="Service Tests Transfer Service Service methods should delete a Transfer" name="Service Tests Transfer Service Service methods should delete a Transfer" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:08" time="0.952" tests="6">
    <testcase classname="Component Tests Transfer Management Component Should call load all on init" name="Component Tests Transfer Management Component Should call load all on init" time="0.033">
    </testcase>
    <testcase classname="Component Tests Transfer Management Component should load a page" name="Component Tests Transfer Management Component should load a page" time="0.027">
    </testcase>
    <testcase classname="Component Tests Transfer Management Component should not load a page is the page is the same as the previous page" name="Component Tests Transfer Management Component should not load a page is the page is the same as the previous page" time="0.025">
    </testcase>
    <testcase classname="Component Tests Transfer Management Component should re-initialize the page" name="Component Tests Transfer Management Component should re-initialize the page" time="0.023">
    </testcase>
    <testcase classname="Component Tests Transfer Management Component should calculate the sort attribute for an id" name="Component Tests Transfer Management Component should calculate the sort attribute for an id" time="0.025">
    </testcase>
    <testcase classname="Component Tests Transfer Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Transfer Management Component should calculate the sort attribute for a non-id attribute" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:09" time="0.658" tests="5">
    <testcase classname="Service Tests ToolVersion Service Service methods should find an element" name="Service Tests ToolVersion Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests ToolVersion Service Service methods should create a ToolVersion" name="Service Tests ToolVersion Service Service methods should create a ToolVersion" time="0.012">
    </testcase>
    <testcase classname="Service Tests ToolVersion Service Service methods should update a ToolVersion" name="Service Tests ToolVersion Service Service methods should update a ToolVersion" time="0.014">
    </testcase>
    <testcase classname="Service Tests ToolVersion Service Service methods should return a list of ToolVersion" name="Service Tests ToolVersion Service Service methods should return a list of ToolVersion" time="0.01">
    </testcase>
    <testcase classname="Service Tests ToolVersion Service Service methods should delete a ToolVersion" name="Service Tests ToolVersion Service Service methods should delete a ToolVersion" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:09" time="0.926" tests="6">
    <testcase classname="Component Tests Run Management Component Should call load all on init" name="Component Tests Run Management Component Should call load all on init" time="0.031">
    </testcase>
    <testcase classname="Component Tests Run Management Component should load a page" name="Component Tests Run Management Component should load a page" time="0.022">
    </testcase>
    <testcase classname="Component Tests Run Management Component should not load a page is the page is the same as the previous page" name="Component Tests Run Management Component should not load a page is the page is the same as the previous page" time="0.029">
    </testcase>
    <testcase classname="Component Tests Run Management Component should re-initialize the page" name="Component Tests Run Management Component should re-initialize the page" time="0.025">
    </testcase>
    <testcase classname="Component Tests Run Management Component should calculate the sort attribute for an id" name="Component Tests Run Management Component should calculate the sort attribute for an id" time="0.017">
    </testcase>
    <testcase classname="Component Tests Run Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Run Management Component should calculate the sort attribute for a non-id attribute" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:10" time="0.703" tests="5">
    <testcase classname="Service Tests DataFile Service Service methods should find an element" name="Service Tests DataFile Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests DataFile Service Service methods should create a DataFile" name="Service Tests DataFile Service Service methods should create a DataFile" time="0.01">
    </testcase>
    <testcase classname="Service Tests DataFile Service Service methods should update a DataFile" name="Service Tests DataFile Service Service methods should update a DataFile" time="0.008">
    </testcase>
    <testcase classname="Service Tests DataFile Service Service methods should return a list of DataFile" name="Service Tests DataFile Service Service methods should return a list of DataFile" time="0.009">
    </testcase>
    <testcase classname="Service Tests DataFile Service Service methods should delete a DataFile" name="Service Tests DataFile Service Service methods should delete a DataFile" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:10" time="0.685" tests="5">
    <testcase classname="Service Tests ConfigDataSet Service Service methods should find an element" name="Service Tests ConfigDataSet Service Service methods should find an element" time="0.012">
    </testcase>
    <testcase classname="Service Tests ConfigDataSet Service Service methods should create a ConfigDataSet" name="Service Tests ConfigDataSet Service Service methods should create a ConfigDataSet" time="0.01">
    </testcase>
    <testcase classname="Service Tests ConfigDataSet Service Service methods should update a ConfigDataSet" name="Service Tests ConfigDataSet Service Service methods should update a ConfigDataSet" time="0.008">
    </testcase>
    <testcase classname="Service Tests ConfigDataSet Service Service methods should return a list of ConfigDataSet" name="Service Tests ConfigDataSet Service Service methods should return a list of ConfigDataSet" time="0.009">
    </testcase>
    <testcase classname="Service Tests ConfigDataSet Service Service methods should delete a ConfigDataSet" name="Service Tests ConfigDataSet Service Service methods should delete a ConfigDataSet" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:11" time="0.708" tests="5">
    <testcase classname="Service Tests DataSet Service Service methods should find an element" name="Service Tests DataSet Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests DataSet Service Service methods should create a DataSet" name="Service Tests DataSet Service Service methods should create a DataSet" time="0.011">
    </testcase>
    <testcase classname="Service Tests DataSet Service Service methods should update a DataSet" name="Service Tests DataSet Service Service methods should update a DataSet" time="0.014">
    </testcase>
    <testcase classname="Service Tests DataSet Service Service methods should return a list of DataSet" name="Service Tests DataSet Service Service methods should return a list of DataSet" time="0.007">
    </testcase>
    <testcase classname="Service Tests DataSet Service Service methods should delete a DataSet" name="Service Tests DataSet Service Service methods should delete a DataSet" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:11" time="0.715" tests="5">
    <testcase classname="Service Tests UserPreferences Service Service methods should find an element" name="Service Tests UserPreferences Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests UserPreferences Service Service methods should create a UserPreferences" name="Service Tests UserPreferences Service Service methods should create a UserPreferences" time="0.01">
    </testcase>
    <testcase classname="Service Tests UserPreferences Service Service methods should update a UserPreferences" name="Service Tests UserPreferences Service Service methods should update a UserPreferences" time="0.011">
    </testcase>
    <testcase classname="Service Tests UserPreferences Service Service methods should return a list of UserPreferences" name="Service Tests UserPreferences Service Service methods should return a list of UserPreferences" time="0.013">
    </testcase>
    <testcase classname="Service Tests UserPreferences Service Service methods should delete a UserPreferences" name="Service Tests UserPreferences Service Service methods should delete a UserPreferences" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:11" time="0.717" tests="8">
    <testcase classname="Service Tests Account Service Service methods should call /account if user is undefined" name="Service Tests Account Service Service methods should call /account if user is undefined" time="0.015">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods should call /account only once" name="Service Tests Account Service Service methods should call /account only once" time="0.017">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAuthority should return false if user is not logged" name="Service Tests Account Service Service methods hasAuthority should return false if user is not logged" time="0.012">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAuthority should return false if user is logged and has not authority" name="Service Tests Account Service Service methods hasAuthority should return false if user is logged and has not authority" time="0.012">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAuthority should return true if user is logged and has authority" name="Service Tests Account Service Service methods hasAuthority should return true if user is logged and has authority" time="0.014">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAnyAuthority should return false if user is not logged" name="Service Tests Account Service Service methods hasAnyAuthority should return false if user is not logged" time="0.011">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAnyAuthority should return false if user is logged and has not authority" name="Service Tests Account Service Service methods hasAnyAuthority should return false if user is logged and has not authority" time="0.017">
    </testcase>
    <testcase classname="Service Tests Account Service Service methods hasAnyAuthority should return true if user is logged and has authority" name="Service Tests Account Service Service methods hasAnyAuthority should return true if user is logged and has authority" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:11" time="0.883" tests="3">
    <testcase classname="Component Tests User Management Update Component OnInit Should load authorities and language on init" name="Component Tests User Management Update Component OnInit Should load authorities and language on init" time="0.023">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call update service on save for existing user" name="Component Tests User Management Update Component save Should call update service on save for existing user" time="0.022">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call create service on save for new user" name="Component Tests User Management Update Component save Should call create service on save for new user" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:12" time="0.835" tests="4">
    <testcase classname="Component Tests PasswordComponent should show error if passwords do not match" name="Component Tests PasswordComponent should show error if passwords do not match" time="0.031">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should call Auth.changePassword when passwords match" name="Component Tests PasswordComponent should call Auth.changePassword when passwords match" time="0.032">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should set success to OK upon success" name="Component Tests PasswordComponent should set success to OK upon success" time="0.028">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should notify of error if change password fails" name="Component Tests PasswordComponent should notify of error if change password fails" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:12" time="0.839" tests="3">
    <testcase classname="Component Tests LogsComponent OnInit should set all default values correctly" name="Component Tests LogsComponent OnInit should set all default values correctly" time="0.028">
    </testcase>
    <testcase classname="Component Tests LogsComponent OnInit Should call load all on init" name="Component Tests LogsComponent OnInit Should call load all on init" time="0.032">
    </testcase>
    <testcase classname="Component Tests LogsComponent change log level should change log level correctly" name="Component Tests LogsComponent change log level should change log level correctly" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:13" time="0.857" tests="2">
    <testcase classname="Component Tests User Management Component OnInit Should call load all on init" name="Component Tests User Management Component OnInit Should call load all on init" time="0.034">
    </testcase>
    <testcase classname="Component Tests User Management Component setActive Should update user and call load all" name="Component Tests User Management Component setActive Should update user and call load all" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:13" time="0.945" tests="3">
    <testcase classname="Component Tests SettingsComponent should send the current identity upon save" name="Component Tests SettingsComponent should send the current identity upon save" time="0.025">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of success upon successful save" name="Component Tests SettingsComponent should notify of success upon successful save" time="0.019">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of error upon failed save" name="Component Tests SettingsComponent should notify of error upon failed save" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:14" time="0.922" tests="3">
    <testcase classname="Component Tests JhiConfigurationComponent OnInit should set all default values correctly" name="Component Tests JhiConfigurationComponent OnInit should set all default values correctly" time="0.033">
    </testcase>
    <testcase classname="Component Tests JhiConfigurationComponent OnInit Should call load all on init" name="Component Tests JhiConfigurationComponent OnInit Should call load all on init" time="0.046">
    </testcase>
    <testcase classname="Component Tests JhiConfigurationComponent keys method should return the keys of an Object" name="Component Tests JhiConfigurationComponent keys method should return the keys of an Object" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:14" time="0.964" tests="2">
    <testcase classname="Component Tests UserPreferences Management Update Component save Should call update service on save for existing entity" name="Component Tests UserPreferences Management Update Component save Should call update service on save for existing entity" time="0.038">
    </testcase>
    <testcase classname="Component Tests UserPreferences Management Update Component save Should call create service on save for new entity" name="Component Tests UserPreferences Management Update Component save Should call create service on save for new entity" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:15" time="0.843" tests="2">
    <testcase classname="Component Tests ConfigDataSet Management Update Component save Should call update service on save for existing entity" name="Component Tests ConfigDataSet Management Update Component save Should call update service on save for existing entity" time="0.033">
    </testcase>
    <testcase classname="Component Tests ConfigDataSet Management Update Component save Should call create service on save for new entity" name="Component Tests ConfigDataSet Management Update Component save Should call create service on save for new entity" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:15" time="0.878" tests="2">
    <testcase classname="Component Tests ScenarioFile Management Update Component save Should call update service on save for existing entity" name="Component Tests ScenarioFile Management Update Component save Should call update service on save for existing entity" time="0.032">
    </testcase>
    <testcase classname="Component Tests ScenarioFile Management Update Component save Should call create service on save for new entity" name="Component Tests ScenarioFile Management Update Component save Should call create service on save for new entity" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:16" time="0.648" tests="4">
    <testcase classname="Service Tests User Service Service methods should call correct URL" name="Service Tests User Service Service methods should call correct URL" time="0.013">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return User" name="Service Tests User Service Service methods should return User" time="0.012">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return Authorities" name="Service Tests User Service Service methods should return Authorities" time="0.007">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should propagate not found response" name="Service Tests User Service Service methods should propagate not found response" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:16" time="0.777" tests="2">
    <testcase classname="Component Tests ToolVersion Management Update Component save Should call update service on save for existing entity" name="Component Tests ToolVersion Management Update Component save Should call update service on save for existing entity" time="0.032">
    </testcase>
    <testcase classname="Component Tests ToolVersion Management Update Component save Should call create service on save for new entity" name="Component Tests ToolVersion Management Update Component save Should call create service on save for new entity" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:17" time="0.842" tests="2">
    <testcase classname="Component Tests OutputFile Management Update Component save Should call update service on save for existing entity" name="Component Tests OutputFile Management Update Component save Should call update service on save for existing entity" time="0.031">
    </testcase>
    <testcase classname="Component Tests OutputFile Management Update Component save Should call create service on save for new entity" name="Component Tests OutputFile Management Update Component save Should call create service on save for new entity" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:17" time="0.809" tests="2">
    <testcase classname="Component Tests DataFile Management Update Component save Should call update service on save for existing entity" name="Component Tests DataFile Management Update Component save Should call update service on save for existing entity" time="0.034">
    </testcase>
    <testcase classname="Component Tests DataFile Management Update Component save Should call create service on save for new entity" name="Component Tests DataFile Management Update Component save Should call create service on save for new entity" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:18" time="0.797" tests="2">
    <testcase classname="Component Tests Transfer Management Update Component save Should call update service on save for existing entity" name="Component Tests Transfer Management Update Component save Should call update service on save for existing entity" time="0.033">
    </testcase>
    <testcase classname="Component Tests Transfer Management Update Component save Should call create service on save for new entity" name="Component Tests Transfer Management Update Component save Should call create service on save for new entity" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:18" time="0.799" tests="2">
    <testcase classname="Component Tests Scenario Management Update Component save Should call update service on save for existing entity" name="Component Tests Scenario Management Update Component save Should call update service on save for existing entity" time="0.04">
    </testcase>
    <testcase classname="Component Tests Scenario Management Update Component save Should call create service on save for new entity" name="Component Tests Scenario Management Update Component save Should call create service on save for new entity" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:18" time="0.584" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.013">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the config" name="Service Tests Logs Service Service methods should get the config" time="0.01">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the env" name="Service Tests Logs Service Service methods should get the env" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:19" time="0.759" tests="2">
    <testcase classname="Component Tests DataSet Management Update Component save Should call update service on save for existing entity" name="Component Tests DataSet Management Update Component save Should call update service on save for existing entity" time="0.031">
    </testcase>
    <testcase classname="Component Tests DataSet Management Update Component save Should call create service on save for new entity" name="Component Tests DataSet Management Update Component save Should call create service on save for new entity" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:19" time="0.841" tests="2">
    <testcase classname="Component Tests UploadFile Management Update Component save Should call update service on save for existing entity" name="Component Tests UploadFile Management Update Component save Should call update service on save for existing entity" time="0.032">
    </testcase>
    <testcase classname="Component Tests UploadFile Management Update Component save Should call create service on save for new entity" name="Component Tests UploadFile Management Update Component save Should call create service on save for new entity" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:19" time="0.769" tests="3">
    <testcase classname="Component Tests ActivateComponent calls activate.get with the key from params" name="Component Tests ActivateComponent calls activate.get with the key from params" time="0.022">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set success to OK upon successful activation" name="Component Tests ActivateComponent should set set success to OK upon successful activation" time="0.017">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set error to ERROR upon activation failure" name="Component Tests ActivateComponent should set set error to ERROR upon activation failure" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:20" time="0.811" tests="2">
    <testcase classname="Component Tests Run Management Update Component save Should call update service on save for existing entity" name="Component Tests Run Management Update Component save Should call update service on save for existing entity" time="0.032">
    </testcase>
    <testcase classname="Component Tests Run Management Update Component save Should call create service on save for new entity" name="Component Tests Run Management Update Component save Should call create service on save for new entity" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:20" time="0.694" tests="3">
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" time="0.037">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" time="0.025">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:21" time="0.827" tests="1">
    <testcase classname="Component Tests UserPreferences Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests UserPreferences Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:21" time="0.793" tests="1">
    <testcase classname="Component Tests ConfigDataSet Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests ConfigDataSet Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:22" time="0.936" tests="1">
    <testcase classname="Component Tests ScenarioFile Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests ScenarioFile Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:22" time="1.099" tests="1">
    <testcase classname="Component Tests User Management Detail Component OnInit Should call load all on init" name="Component Tests User Management Detail Component OnInit Should call load all on init" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:23" time="0.955" tests="1">
    <testcase classname="Component Tests ToolVersion Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests ToolVersion Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:23" time="0.856" tests="1">
    <testcase classname="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:24" time="0.8" tests="3">
    <testcase classname="Service Tests Audits Service Service methods should call correct URL" name="Service Tests Audits Service Service methods should call correct URL" time="0.013">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should return Audits" name="Service Tests Audits Service Service methods should return Audits" time="0.009">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should propagate not found response" name="Service Tests Audits Service Service methods should propagate not found response" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:24" time="0.762" tests="1">
    <testcase classname="Component Tests OutputFile Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests OutputFile Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:24" time="0.744" tests="1">
    <testcase classname="Component Tests DataFile Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests DataFile Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:25" time="0.719" tests="1">
    <testcase classname="Component Tests Transfer Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Transfer Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:25" time="0.732" tests="1">
    <testcase classname="Component Tests Scenario Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Scenario Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:25" time="0.725" tests="1">
    <testcase classname="Component Tests DataSet Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests DataSet Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:26" time="0.725" tests="1">
    <testcase classname="Component Tests UploadFile Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests UploadFile Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:26" time="0.687" tests="1">
    <testcase classname="Component Tests Run Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Run Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:27" time="0.61" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.012">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Metrics" name="Service Tests Logs Service Service methods should return Metrics" time="0.008">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Thread Dump" name="Service Tests Logs Service Service methods should return Thread Dump" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:27" time="0.729" tests="1">
    <testcase classname="Component Tests UserPreferences Management Component Should call load all on init" name="Component Tests UserPreferences Management Component Should call load all on init" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:27" time="0.797" tests="1">
    <testcase classname="Component Tests ConfigDataSet Management Component Should call load all on init" name="Component Tests ConfigDataSet Management Component Should call load all on init" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:28" time="0.794" tests="1">
    <testcase classname="Component Tests JhiMetricsMonitoringComponent refresh should call refresh on init" name="Component Tests JhiMetricsMonitoringComponent refresh should call refresh on init" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:28" time="0.757" tests="1">
    <testcase classname="Component Tests DataFile Management Component Should call load all on init" name="Component Tests DataFile Management Component Should call load all on init" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:29" time="0.745" tests="1">
    <testcase classname="Component Tests UploadFile Management Component Should call load all on init" name="Component Tests UploadFile Management Component Should call load all on init" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:29" time="0.737" tests="1">
    <testcase classname="Component Tests DataSet Management Component Should call load all on init" name="Component Tests DataSet Management Component Should call load all on init" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:29" time="0.684" tests="1">
    <testcase classname="Component Tests UserPreferences Management Detail Component OnInit Should call load all on init" name="Component Tests UserPreferences Management Detail Component OnInit Should call load all on init" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:30" time="0.685" tests="1">
    <testcase classname="Component Tests ConfigDataSet Management Detail Component OnInit Should call load all on init" name="Component Tests ConfigDataSet Management Detail Component OnInit Should call load all on init" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:30" time="0.696" tests="1">
    <testcase classname="Component Tests ScenarioFile Management Detail Component OnInit Should call load all on init" name="Component Tests ScenarioFile Management Detail Component OnInit Should call load all on init" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:31" time="0.657" tests="1">
    <testcase classname="Component Tests ToolVersion Management Detail Component OnInit Should call load all on init" name="Component Tests ToolVersion Management Detail Component OnInit Should call load all on init" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:31" time="0.873" tests="1">
    <testcase classname="Component Tests OutputFile Management Detail Component OnInit Should call load all on init" name="Component Tests OutputFile Management Detail Component OnInit Should call load all on init" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:31" time="0.683" tests="2">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.022">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should change log level" name="Service Tests Logs Service Service methods should change log level" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:32" time="0.695" tests="1">
    <testcase classname="Component Tests DataFile Management Detail Component OnInit Should call load all on init" name="Component Tests DataFile Management Detail Component OnInit Should call load all on init" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:32" time="0.869" tests="1">
    <testcase classname="Component Tests Scenario Management Detail Component OnInit Should call load all on init" name="Component Tests Scenario Management Detail Component OnInit Should call load all on init" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:32" time="0.768" tests="1">
    <testcase classname="Component Tests Transfer Management Detail Component OnInit Should call load all on init" name="Component Tests Transfer Management Detail Component OnInit Should call load all on init" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:33" time="0.697" tests="1">
    <testcase classname="Component Tests UploadFile Management Detail Component OnInit Should call load all on init" name="Component Tests UploadFile Management Detail Component OnInit Should call load all on init" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:33" time="0.663" tests="1">
    <testcase classname="Component Tests DataSet Management Detail Component OnInit Should call load all on init" name="Component Tests DataSet Management Detail Component OnInit Should call load all on init" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2019-10-22T07:17:34" time="0.652" tests="1">
    <testcase classname="Component Tests Run Management Detail Component OnInit Should call load all on init" name="Component Tests Run Management Detail Component OnInit Should call load all on init" time="0.036">
    </testcase>
  </testsuite>
</testsuites>